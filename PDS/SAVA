SAVA     TITLE 'SAVA '
***********************************************************************
*                                                                     *
*  Keep track of label references.                                    *
*                                                                     *
*  Called by ADDR, ARL, PASS3, PASS4, SPPR, SYM.                      *
*                                                                     *
*  Input addressed by R1:                                             *
*    +0 - 1 bytes type of data at address ) as mapped                 *
*    +1 - 8 byte csect the label is in    )  by LABELMAP              *
*    +9 - 3 byte address                  )                           *
*   +12 - 8 byte symbol name or spaces    )                           *
*                                                                     *
*  Output addressed by R1:                                            *
*   +12 - 8 byte symbol                                               *
*                                                                     *
*  History:                                                           *
*    Put input symbols into table.                       CFK Apr 2000 *
*    Map the table of saved addresses.                   CFK Apr 2000 *
*    Allow for up to 10 memory accesses per text card.   CFK Apr 2000 *
*    Add check for address not found on 4th pass.        CFK Jun 2000 *
*    Use register equates.                               CFK Dec 2000 *
*    Put not found address into R3 in dump.              CFK Nov 2001 *
*    Let PASS4 reset SVK.                                CFK Dec 2001 *
*    Dynamically allocate address buffer.                CFK Mar 2003 *
*    Save and restore all registers.                     CFK Mar 2003 *
*    Use standard linkage conventions.                   CFK Sep 2003 *
*    Call BSC with standard linkage conventions.         CFK Oct 2003 *
*    Add csect name to table.                            CFK Dec 2003 *
*    Pass back generated name in LABNAME.                CFK Dec 2003 *
*    BSCOFLAG and BSCONAME don't overlap now.            CFK Jan 2004 *
*                                                                     *
***********************************************************************
         LABELMAP                 map the table of saved addresses
SAVA     CSECT
         ENTER ,                  entry logic                 CFK*SEP03
         ENTRY AST                ref'ed by PASS3
         ENTRY NAST               ref'ed by PASS3
         ENTRY SVK                ref'ed by PASS4             CFK*DEC01
         EXTRN BSC                csect
*        EXTRN PA                 in PASS1 csect
         LR    R10,R1             copy @ parms                CFK*SEP03
         USING LABELMAP,R10       tell assembler about parms  CFK*SEP03
         MVC   WSADR,LABADR       copy input address          CFK*APR03
         CLI   SVK,X'FF'          on to 3rd pass ?
         BE    RTSB               br. if so, all inserts done CFK*MAR03
         L     R3,NAST            get number of entries in use
         C     R3,SV100           full ?
         BL    LASTV              no - OK
*  yes, - we need a (larger) address buffer                   CFK*MAR03
         LA    R0,1024(R3,R3)     calc new max no. of slots   CFK*MAR03
         ST    R0,SV100           save new limit              CFK*MAR03
         MH    R0,=Y(LABENTLN)    calc new buffer length      CFK*MAR03
*                                                             CFK*MAR03
         GETMAIN RU,LV=(0),SP=2   get new buffer              CFK*MAR03
*                                                             CFK*MAR03
         L     R6,TABLE@          get @ old buffer            CFK*MAR03
         ST    R1,TABLE@          save @ new buffer           CFK*MAR03
         L     R4,AST             get @ old first free entry  CFK*MAR03
         SR    R4,R6              calc offset to free entry   CFK*MAR03
         AR    R4,R1              calc @ new first free entry CFK*MAR03
         ST    R4,AST             save for reuse              CFK*MAR03
         LTR   R7,R3              copy old slot number        CFK*MAR03
         BZ    NOFREE             if no old buffer skip free  CFK*MAR03
         LR    R4,R1              copy @ new buffer           CFK*MAR03
         MH    R7,=Y(LABENTLN)    calc old buffer length      CFK*MAR03
         LR    R0,R7              copy old len for freemain   CFK*MAR03
         LR    R5,R7              copy old len for MVCL       CFK*MAR03
         LR    R1,R6              copy old @ for freemain     CFK*MAR03
         MVCL  R4,R6              copy old buffer to new      CFK*MAR03
*                                                             CFK*MAR03
         FREEMAIN RU,LV=(0),A=(1),SP=2  free old buffer       CFK*MAR03
*                                                             CFK*MAR03
NOFREE   DS    0H                                             CFK*MAR03
LASTV    LA    R3,1(R3)           ) add 1 to
         ST    R3,NAST            ) entry count
         L     R4,AST             get @ 1st free entry
         DROP  R10                done with R10               CFK*SEP03
         USING LABELMAP,R4        tell assembler              CFK*MAY00
         MVC   LABELENT,0(R10)    copy new entry              CFK*SEP03
         LA    R4,LABENTLN(R4)    ) bump last
         ST    R4,AST             ) entry pointer
         DROP  R4                 done with R4                CFK*MAY00
         USING LABELMAP,R10       tell assembler about parms  CFK*SEP03
RSTV     DS    0H                                             CFK*MAR03
         UNPK  LABNAME(7),WSADR(4)  unpack address            CFK*DEC03
         TR    LABNAME(1),=C'ABCDEFGHIJKLMNOP'-240  make A-P  CFK*DEC03
         TR    LABNAME+1(5),=C'0123456789ABCDEF'-240 make hex CFK*DEC03
         MVC   LABNAME+6(2),BLK   make rest of output spaces  CFK*DEC03
         LEAVE ,                  RETURN                      CFK*SEP03
* process call during 4th pass
RTSB     DS    0H                                             CFK*OCT03
         MVC   BSCKEY,LABCADR     copy input csect & address  CFK*DEC03
         L     R15,ABSC           get @ BSC csect             CFK*OCT03
         LA    R1,BSCPRMS         get @ parms                 CFK*OCT03
         BASR  R14,R15            call BSC                    CFK*OCT03
         CLI   BSCOFLAG,C' '      found something ?           CFK*JAN04
         BE    LOSTADR            error if not found on 4th pass *OCT03
         CLI   BSCONAME,C' '      IS HERE A SYMBOL ?          CFK*JAN04
         BE    RSTV               br. to generate symbol if not
         MVC   LABNAME,BSCONAME   YES - return it             CFK*JAN04
         LEAVE ,                  RETURN                      CFK*SEP03
LOSTADR  DS    0H                 new address on 4th pass     CFK*JUN00
         LA    R3,BSCPRMS         point @ BSC parms           CFK*JAN04
         ABEND 12,DUMP            take a dump                 CFK*JUN00
         DC    C'IMM='
         LTORG                                                CFK*SEP03
ABSC     DC    A(BSC)             @ BSC csect
BLK      DC    C'  '              blanks (constant)           CFK*MAR03
WSADR    DS    Xl3                copy of input address       CFK*APR03
SV100    DC    F'0'               max entries in table        CFK*MAR03
AST      DC    A(0)               entry point, @ 1st free ent CFK*MAR03
SVK      DC    F'0'               set by PASS3, reset by PASS4
NAST     DC    F'0'               entry point, number of entries used
TABLE@   DC    A(0)               @ table of addresses        CFK*MAR03
* each entry is mapped by the LABELMAP dsect                  CFK*APR00
* parms to call BSC with                                      CFK*OCT03
BSCPRMS  DS    0F                 parms to call BSC           CFK*DEC03
BSCOFLAG DC    X'0'                                           CFK*JAN04
BSCONAME DS    0CL8               output name                 CFK*DEC03
BSCKEY   DS    0CL11              key to search on            CFK*DEC03
BSCSECT  DS    CL8                csect name                  CFK*DEC03
BSCA3    DS    XL3                input 3 byte address        CFK*DEC03
* end of BSC parms                                            CFK*OCT03
SAVEAREA DS    18F                registers saved here        CFK*SEP03
         YREGS ,                  register equates            CFK*DEC00
         END
