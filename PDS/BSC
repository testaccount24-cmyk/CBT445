BSC      TITLE 'BSC '
***********************************************************************
*                                                                     *
*     Binary search routine to find if an address is in the table     *
*  of known addresses.                                                *
*                                                                     *
*  Called by SAVA and SPPR. It used to be called by PASS3 and PASS4.  *
*                                                                     *
*  Input: 12 bytes pointed to by R1                                   *
*    +0 - input byte x'00'                                            *
*    +1 - 8 byte csect name ) string to                               *
*    +9 - 3 byte addess     )  search for                             *
*  Output: overlays input                                             *
*    +0 - flag, C' ' if entry not found                               *
*    +1 - 8 byte entry name if found                                  *
*  Return is to R14                                                   *
*  Register use                                                       *
*    R3 - @ first entry                                               *
*    R4 - lowest possible entry number                                *
*    R5 - current entry number                                        *
*    R6 - @ current entry                                             *
*    R7 - highest possible entry number                               *
*                                                                     *
*  See Knuth 2nd edition volume 3 section 6.2.1 (page 410) for the    *
*  algorithm (algorithm b). Note that the entries are numbered from   *
*  0 to N-1 as implemented.                                           *
*                                                                     *
*  History:                                                           *
*    Map table with LABELMAP macro.                      CFK Apr 2000 *
*    Don't need PASS3 to set @ address table.            CFK Apr 2000 *
*    Rewrite to fix bug searching new table format.      CFK Jly 2000 *
*    Use register equates.                               CFK Dec 2000 *
*    Dynamic label space.                                CFK Apr 2003 *
*    Use standard linkage conventions                    CFK Oct 2003 *
*    Key now includes csect name                         CFK Dec 2003 *
*    Output separate flag to say if entry found          CFK Jan 2004 *
*                                                                     *
***********************************************************************
         LABELMAP                 map address table           CFK*APR00
BSC      CSECT
         EXTRN NAST               in SAVA, number of entries  CFK*APR00
         ENTER ,                  entry logic                 CFK*OCT03
         L     R3,ANAST           get @ number of entries
         L     R7,0(R3)           get number of entries
         L     R3,4(R3)           get @ first entry           CFK*APR03
         SR    R4,R4              lowest entry is number 0    CFK*JLY00
SRB1     BCTR  R7,0               subtract 1 to get last no.  CFK*JLY00
SRB2     DS    0H     check this entry                        CFK*JLY00
         CR    R7,R4              upper limit below lower ?   CFK*JLY00
         BL    NOTFOUND           if so not found             CFK*JLY00
         LR    R5,R7              copy high limit             CFK*JLY00
         AR    R5,R4              add low limit               CFK*JLY00
         SRL   R5,1               calculate average           CFK*JLY00
         LR    R6,R5              copy current entry number   CFK*APR00
         MH    R6,=AL2(LABENTLN)  multiply by address length  CFK*APR00
         USING LABELMAP,R6        tell assembler              CFK*APR00
         AR    R6,R3              get @ current entry
         CLC   1(L'LABCADR,R1),LABCADR   is this it ?         CFK*DEC03
         BE    FND2               found it if equal
         BL    HIGH2              input lower than this entry
* input is higher than the current entry
         LA    R4,1(R5)           set lower limit to last+1   CFK*JLY00
         B     SRB2               else check this entry
HIGH2    DS    0H     input lower than the current entry      CFK*JLY00
         LR    R7,R5              set upper limit to last-1   CFK*JLY00
         B     SRB1               and try again               CFK*JLY00
FND2     DS    0H                 found it !
         MVC   1(8,R1),LABNAME    copy ebcdic label           CFK*OCT03
         MVI   0(R1),X'00'        indicate found something    CFK*JAN04
BRET     DS    0H                 exit point                  CFK*OCT03
         LEAVE ,                  RETURN                      CFK*OCT03
NOTFOUND MVI   0(R1),C' '         ADDRESS NOT IN TABLE        CFK*JAN04
         MVI   1(R1),C' '         ADDRESS NOT IN TABLE        CFK*JAN04
         B     BRET               and return
         DC    C'IMM='
ANAST    DC    A(NAST)            @ number of addresses       CFK*APR00
* the table of addresses starts just after NAST in SAVA       CFK*APR00
SAVEAREA DS    18F                                            CFK*OCT03
         YREGS ,                  register equates            CFK*DEC00
         END

