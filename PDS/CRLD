CRLD     TITLE 'CRLD, Get logical address of next ADCON'
***********************************************************************
*                                                                     *
*  Get logical address of next ADCON                                  *
*                                                                     *
*  Called by FTXTA                                                    *
*                                                                     *
*  Parms @ R1:                                                        *
*    +0  - output 8 byte RLD entry mapped by RLDITEM                  *
*    +4  - output logical address of next ADCON (part of RLD entry)   *
*    +8  - output 2 byte field, length of ADCON                       *
*    +10 - input 2 byte field, current ESD ID                         *
*                                                                     *
*  Return to @ R14                                                    *
*                                                                     *
*  History:                                                           *
*    Use dsect for parameters.                           CFK Dec 2000 *
*    Use register equates.                               CFK Dec 2000 *
*    Use standard entry/exit logic.                      CFK Dec 2000 *
*    Set adcon address to x'FFFFFF' when no more.        CFK Dec 2000 *
*    Multi-csect object deck support.                    CFK Dec 2001 *
*      Output adcon len now 2 bytes.                     CFK Dec 2001 *
*      Only pass back adcons in current csect.           CFK Mar 2002 *
*    Dymanic RLD buffer support, ARLDE now set by RLD.   CFK Mar 2003 *
*    Rewrite to remove O(nÂ¬2) runtime.                   CFK May 2003 *
*                                                                     *
***********************************************************************
PRMDUM   DSECT                    parameters
PRMRLD   DS    0CL8               output RLD entry
PRMRLD1  DS    CL4                1st half of RLD entry
PRMRLD2  DS    0CL4               2nd half
PRMRLDFL DS    X                  flag byte
PRMRLDAD DS    XL3                address of adcon
PRMRLDLN DS    XL2                length of adcon
PRMRLDID DS    XL2                current ESD ID              CFK*DEC01
*
         RLDITEM                  map RLD item                CFK*DEC01
*                                                             CFK*MAY03
         RLDARRAY                 array of sorted RLD entries CFK*MAY03
*
CRLD     CSECT
         ENTRY RLF                ref'ed by FTXTA             CFK*APR03
         ENTRY ARLDE              ref'ed by RLD               CFK*MAR03
         EXTRN NBR                in RLD csect
         ENTER                                                CFK*DEC00
         USING PRMDUM,R1          tell assembler about parms  CFK*DEC00
         USING RLDITEM,PRMRLD     and map RLD entry           CFK*MAR02
         CLI   RLF,X'FF'          1st pass over current csect ?
         BE    BRLD               br if not 1st pass
         MVI   RLF,X'FF'          else indicate not 1st pass
         L     R3,ANBR            INITIALIZE, get @ RLD length FK*MAR03
         L     R4,ARLDE           get @ RLD table
         ST    R4,ARLDS           set @ current entry
         A     R4,0(R3)           calc @ end of table
         ST    R4,RLB             save @ end of table
         MVI   PRMRLDFL,X'00'     flag not continuation
BRLD     DS    0H
         L     R3,ARLDS           get RLD pointer
         USING RLDARRAY,R3                                    CFK*MAY03
BRLD2    DS    0H
         C     R3,RLB             end of table reached ?
         BNL   REN                branch if end reached
         MVC   RLDITGID,RLDATGID  )                           CFK*MAY03
         MVC   RLDISDID,RLDASDID  ) build output              CFK*MAY03
         MVC   PRMRLDFL,RLDAFLAG  )  RLD entry                CFK*MAY03
         MVC   PRMRLDAD,RLDAADR   )                           CFK*MAY03
         LA    R3,8(R3)           point @ next RLD entry      CFK*MAY03
         CLC   RLDISDID,PRMRLDID  is it for current CSECT ?   CFK*MAY03
         BNE   BRLD2              if not try next entry       CFK*MAR02
         L     R4,PRMRLDFL        ) get length
         SLL   R4,4               )  of this
         SRL   R4,30              )   RLD entry
         LA    R4,1(R4)           CALCULATE LENGTH
         STH   R4,PRMRLDLN        save length
         ST    R3,ARLDS           save @ current RLD entry
         B     RRR                and return
REN      DS    0H
         MVC   PRMRLDLN,LRD       YES, pass dummy len of x'FFFF' *DEC01
         MVC   PRMRLDAD,LRD       and dummy adr. of x'FFFFFF' CFK*DEC00
         MVI   PRMRLDFL,X'00'     flag no continuation
         MVC   ARLDS(4),ARLDE     reset RLD pointer to base value
RRR      LEAVE                                                CFK*DEC00
         DC    C'IMM='
ANBR     DC    A(NBR)             @ NBR in RLD csect          CFK*MAR03
ARLDS    DC    A(0)               @ RLD buffer                CFK*MAR03
ARLDE    DC    A(0)               @ RLD buffer, set by RLD    CFK*MAR03
RLB      DC    F'0'               @ end of RLD table
RLF      DC    X'00'              flag, cleared by FTXTA
LRD      DC    X'FFFFFF'          constant                    CFK*DEC01
SAVEAREA DS    18F                                            CFK*OCT03
         YREGS                    register equates            CFK*DEC00
         END
