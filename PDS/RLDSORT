***********************************************************************
*  Sort entries in the RLD array.                                     *
*                                                                     *
*  Called from TXT when an END card has been read.                    *
*                                                                     *
*  Standard entry/exit logic                                          *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
* History:                                                            *
*   First written                                        CFK May 2003 *
*                                                                     *
***********************************************************************
         RLDARRAY
RLDSORT  CSECT
         EXTRN ARLDE                  @ RLD array (in CRLD)
         EXTRN NBR                    bytes used in RLD array (in RLD)
         ENTER
         L     R8,=A(NBR)             get @ bytes used
         L     R8,0(R8)               get bytes used (8 * num entries)
         SRL   R8,3                   calc number of entries
         BCTR  R8,0                   calc number of entries - 1
         L     R10,=A(ARLDE)          get @ @ RLD array
         L     R10,0(R10)             get @ RLD array
* sort all addresses with a shell sort
* first calculate maximum step size
         LA    R3,1                   prepare index
         LTR   R4,R8                  copy no. of adr. - 1
         BNP   SORTDONE               skip if 1 or no entries to sort
         SRA   R4,3                   divide by 8 for max step size
         BZ    Z10B                   if < 8 adr. step size=1
Z10A     DS    0H
         MH    R3,=H'3'               multiply by 3
         LA    R3,1(R3)               and add 1
         CR    R3,R4                  until
         BL    Z10A                   r3 >= no. addresses/8
Z10B     DS    0H
* start of sort proper
         MH    R3,=AL2(RLDALEN)       calc stride
Z20A     DS    0H                     REPEAT
         XR    R4,R4                  FOR R4 = 0 TO R3 - 1
Z30A     DS    0H                     ditto
         LR    R5,R8                  copy no. of adr. - 1
         MH    R5,=AL2(RLDALEN)       calc offset to last ent
         AR    R5,R10                 calc @ last entry
Z35B     DS    0H                     REPEAT
         XR    R7,R7                  clear new limit
         LA    R6,0(R4,R10)           calc @ first entry in this bank
         USING RLDARRAY,R6            tell assembler
         LA    R9,0(R3,R6)            calc @ next entry in this bank
Z40A     DS    0H                     FOR R6 = R4 TO R5 STEP R3
         CLC   RLDAKEY,RLDAKEY-RLDARRAY(R9)  are they in seq ?
         BNH   Z50A                   already sorted.
         LM    R0,R1,RLDARRAY         )
         MVC   RLDARRAY(8),0(R9)      ) swap entries
         DROP  R6                     )         (RLDARRAY)
         USING RLDARRAY,R9            )
         STM   R0,R1,RLDARRAY         )
         LR    R7,R6                  set new limit
Z50A     DS    0H
         AR    R6,R3                  bump pointer
         AR    R9,R3                  bump other pointer
         CR    R9,R5                  got to the end ?
         BNH   Z40A                   NEXT R6 if not.
         LTR   R5,R7                  copy new limit
         BNZ   Z35B                   UNTIL no swaps done
         AH    R4,=AL2(RLDALEN)       point @ next bank
         CR    R4,R3                  done all banks ?
         BL    Z30A                   do next bank if needed
         SH    R3,=AL2(RLDALEN)       subtract 1 * entry size
         BZ    SORTDONE               have we just done 1 step size ? 0
         XR    R2,R2                  clear high reg of r2,r3
         D     R2,=F'3'               else divide by 3
         B     Z20A                   and carry on.
         DROP  R9                     done with RLDARRAY
* finished main loop
SORTDONE DS    0H
         LEAVE                        exit program
         LTORG
SAVEAREA DS    18F                save area                   CFK*JUN04
         YREGS
         END
