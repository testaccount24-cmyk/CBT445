PASS1    TITLE 'PASS1'
***********************************************************************
*                                                                     *
*  Called by PASS0                                                    *
*                                                                     *
*  This makes the first pass over the data, reading all the input and *
*  passing it to the appropriate processing CSECT. Control cards      *
*  starting with 'S', 'P' or 'R' are copied into COTR csect. When an  *
*  END card is read in it returns to PASS0 to continue processing.    *
*                                                                     *
*  History:                                                           *
*    Print control cards.                                CFK Apr 2000 *
*    Set flag to not punch messages.                     CFK Jun 2000 *
*    Pass SYM cards to SYM.                              CFK Aug 2000 *
*    Use register equates.                               CFK Dec 2000 *
*    Use standard linkage conventions.                   CFK Sep 2003 *
*    Call PRINTA, not PRINT.                             CFK Oct 2003 *
*    Tidy up calls to PRINTA.                            CFK Dec 2003 *
*    Exit with RC 8 if EOF reached                       CFK Jan 2004 *
*                                                                     *
***********************************************************************
PASS1    CSECT
         ENTER ,                  entry logic                 CFK*SEP03
         ENTRY LCF                set by TXT when an END card is read
         ENTRY PA                 Print Area used by most csects
         ENTRY PAB                ref'ed by PASS4, RR, FTXTA and SPPR
         ENTRY CARD               input card put here by READA
         EXTRN PRINTA             csect                       CFK*OCT03
         EXTRN ESD                csect
         EXTRN TXT                csect
         EXTRN RLD                csect
         EXTRN SYM                csect                       CFK*AUG00
         EXTRN END                in TXT csect
         EXTRN COTR               csect
INIT     MVC   PB+1(135),PB       INITIALIZE PROG
         L     R3,ACOTR           get @ COTR csect
         MVI   0(R3),X'00'        ) clear
         MVC   1(14,R3),0(R3)     )  COTR
SKIP     MVI   LCF,X'00'          clear END found flag
READP    CLI   LCF,X'FF'          has TXT found an END card
         BE    BPASS              br. if so
NRP      LA    R1,=A(CARD)        get @ input buffer         CFK*OCT03
         CALLS READA              call READA to get nxt card CFK*SEP03
         LTR   R15,R15            is it EOF ?                CFK*SEP03
         BNZ   EOFRTN             exit if so                 CFK*JAN04
         CLI   RFG,X'FF'          1st time through here ?
         BE    NR                 br if not 1st time
         L     R14,ACOTR          get @ COTR csect
         MVI   0(R14),X'00'       put x'00' into COTR
         CLI   CARD,C'S'          'S' card ?
         BE    NPRT               br. if yes
         CLI   CARD,C'P'          'P' card ?
         BNE   NP                 br. if not
         MVI   0(R14),X'01'       yes, put x'01' into COTR
         MVI   RFG,X'FF'          flag not 1st time through
         B     NPRT               and get next card
NP       CLI   CARD,C'R'          'R' card ?
         BNE   NR                 no - process as text card
         MVI   0(R14),X'02'       yes, put x'02' into COTR
         MVI   RFG,X'FF'          flag not 1st time through
NPRT     MVC   1(14,R14),CARD+1   copy rest of card to COTR
         MVC   PA(24),PARMMSG     copy message                CFK*APR00
         MVC   PA+30(80),CARD     add card to message         CFK*APR00
         B     CALLPRT            print message and continue  CFK*APR00
NR       LM    R3,R5,TERC         get BXLE parms
         MVI   RFG,X'FF'          flag not 1st time through
COM      CLC   CARD(4),0(R3)      DETERMINE TYPE
         BE    TERE               OF CARD
         BXLE  R3,R4,COM          try next entry
TEER     MVC   PA(25),TERM        PRINT ERROR MESSAGE
         MVC   PA+30(80),CARD     add card to error message
CALLPRT  DS    0H                                             CFK*APR00
         L     R15,APRINTA        get @ PRINTA csect          CFK*OCT03
         LA    R1,PA              get @ parm                  CFK*DEC03
         BALR  R14,R15            call PRINTA                 CFK*OCT03
         B     READP              and get next card
* an END card has been found
BPASS    LEAVE ,                  return to PASS0             CFK*SEP03
*
EOFRTN   DS    0H                                             CFK*JAN04
         L     R13,4(R13)         get @ caller's save area    CFK*JAN04
         XC    8(4,R13),8(R13)    clear caller's HSA chain    CFK*JAN04
         RETURN (14,12),,RC=8     return with RC 8            CFK*JAN04
*
TERE     S     R3,TERC            CALL ROUTINE TO
         LA    R3,TXTA(R3)
         L     R15,0(R3)          HANDLE CARD                 CFK*SEP03
         LA    R1,ACARD                                       CFK*SEP03
         BASR  R14,R15                                        CFK*SEP03
         B     READP              and get next card
         DC    C'IMM='
ACARD    DC    A(CARD)            @ input card
TERC     DC    A(TXTC)            BXLE parms to search TXTC table
         DC    F'4'                 length of table entry
         DC    A(ENDC)              @ last entry
TXTC     DC    X'02'              CARD TYPES, table scanned by BXLE
         DC    C'TXT'             text
         DC    X'02'
         DC    C'ESD'             external symbol directory
         DC    X'02'
         DC    C'RLD'             relocation directory
         DC    X'02'                                          CFK*AUG00
         DC    C'SYM'             symbols for TEST            CFK*AUG00
ENDC     DC    X'02'
         DC    C'END'             end of csect
TXTA     DC    A(TXT)             HANDLING
         DC    A(ESD)             ROUTINES
         DC    A(RLD)
         DC    A(SYM)                                         CFK*AUG00
         DC    A(END)               (in TXT csect)
APRINTA  DC    A(PRINTA)          @ PRINTA csect              CFK*OCT03
ACOTR    DC    A(COTR)            @ COTR csect
RFG      DC    F'0'               flag to ind. 1st time through
TERM     DC    C'**  NON-RECOGNIZABLE CARD'
PARMMSG  DC    C'**  Parameter card read:'                    CFK*APR00
LCF      DC    X'00'              entry point, set by END when called
CARD     DS    CL80               entry point, input card read by READ
         DC    C'READ ERROR OCCURED. DISASSEMLE ERROR MAY OCCUR '
PB       DC    C' '
PA       DS    CL135              entry point, common print area
PAB      DC    CL136' '           entry point, second print area
SAVEAREA DS    18F                standard save area          CFK*SEP03
         YREGS ,                  resgister equates           CFK*DEC00
         END
