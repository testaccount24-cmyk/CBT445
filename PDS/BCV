BCV      TITLE 'BCV '
***********************************************************************
*                                                                     *
*        convert 1 byte at R14+3 to 4 char number at R14+0            *
*        input reg spec hl (hex)                                      *
*        output reg spec hhll (char, hh and ll in range 00-15)        *
*                                                                     *
*        callers R13 restored from R14+4, return to R14+8             *
*                                                                     *
*  called by PASS4, RR, RX, RS, SPPR                                  *
*                                                                     *
*  attributes:                                                        *
*    reusable                                                         *
*                                                                     *
*  history:                                                           *
*    use register equates                                CFK dec 2000 *
*                                                                     *
***********************************************************************
BCV      CSECT
         BALR  R13,0              setup base reg
         USING *,R13              tell assembler
         SR    R4,R4              clear work reg
         LA    R5,2               loop count
         L     R3,0(R14)          get input (1 byte)
         SRL   R3,4               isolate high 4 bits
LP       MVI   RG1+2,C'0'         assume reg 00-09
         C     R3,NINE            reg 00-09 ?
         BL    N1                 yes - leading 0 ok
         MVI   RG1+2,C'1'         no - need a leading 1
         S     R3,NINE            subtract 10 (who named this NINE)
N1       STC   R3,RG1+3           store 2nd byte of reg no.
         OI    RG1+3,C'0'         make it printable
         BXH   R4,R5,RETV         br if second pass through loop
         NI    3(R14),X'0F'       mask out low 4 bits
         MVC   RG1(2),RG1+2       move high bytes up
         L     R3,0(R14)          load low 4 bits
         B     LP                 loop
RETV     MVC   0(4,R14),RG1       move output to parm area
         L     R13,4(R14)         reload callers base reg
         BAL   R14,8(R14)         and return to caller
         DC    C'IMM='
RG1      DC    F'0'               work area to build output in
NINE     DC    F'10'              constant (with silly name)
         YREGS ,                  register equates            CFK*DEC00
         END

