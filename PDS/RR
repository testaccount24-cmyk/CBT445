RR       TITLE ' RR '
***********************************************************************
*                                                                     *
*  Module to format the parameters for RR and RRE format instructions *
*                                                                     *
*  Input: addressed by R14, mapped by FMTPARMS macro                  *
*    +0  - @ output buffer                                            *
*    +4  - instruction format                                         *
*    +5  - operand format (not used for RR/RRE instructions)          *
*    +6  - instruction length                                         *
*    +8  - instruction to format (2 bytes used, 6 reserved)           *
*    +16 - IC (3 byte instruction counter)                            *
*    +19 - instruction format from AXN table                          *
*    +20 - module returns to here                                     *
*                                                                     *
*  Instruction formats:                                               *
*    X'10' (FMTFRR)  -  RR,  eg SR   1,2                              *
*    X'11' (FMTFRR1) -  RR1, eg SPM  1                                *
*    X'12' (FMTFRR2) -  RR2, eg BR   14                               *
*    X'13' (FMTFE)   -  E,   eg PR                                    *
*                                                                     *
* History                                                             *
*   Check BASR as well as BALR instructions for USING bases. May 1994 *
*   Add SVC description to SVC calls                     CFK May 1994 *
*   Gen SVC number correctly                             CFK Apr 1999 *
*   Format RRE instructions                              CFK Jun 1999 *
*   Format all RR/RRE with only 1 reg needed             CFK Jun 1999 *
*   Ignore format E instructions (no operands)           CFK Jun 1999 *
*   Use FMTPARMS macro to map parameters                 CFK Jun 1999 *
*   Use OUTLINE macro to map output line                 CFK Feb 2000 *
*   Support RR2 instructions, extended branches          CFK Apr 2000 *
*   Put comment on BCR 15,0 CPU serialization            CFK May 2000 *
*   Add CA's secret SVCs to the SVC comment table        CFK Jun 2000 *
*   Use register equates                                 CFK Dec 2000 *
*   USING now uses standard linkage conventions.         CFK Sep 2003 *
*   Use standard linkage conventions                     CFK Nov 2003 *
*                                                                     *
***********************************************************************
         FMTPARMS                 copy parameter map          CFK*JUN99
         OUTLINE                  map output line             CFK*FEB00
RR       CSECT
         ENTER ,                  entry logic                 CFK*NOV03
         LR    R10,R1             copy @ parms                CFK*NOV03
         USING FMTPARMS,R10       tell assembler              CFK*NOV03
         EXTRN PAB                in PASS1 csect
         EXTRN USING              csect
         EXTRN BCV                csect
         CLI   FMTFMT,FMTFE       E format ?                  CFK*JUN99
         BE    RET                branch if yes (no operands) CFK*JUN99
         MVC   RG+3(1),FMTTEXT2   copy registers to BCV parms
         CLI   FMTTEXT1,X'40'     four byte instruction ?     CFK*JUN99
         BL    NOTRRE             no - it's not RRE           CFK*JUN99
         MVC   RG+3(1),FMTTEXT4   copy RRE registers to BCV parms JUN99
NOTRRE   DS    0H                                             CFK*JUN99
         MVC   CRR+3(1),RG+3      copy registers to USING parms
         MVC   RG(3),Z3           clear rest of BCV parms
         CLI   FMTTEXT,X'0A'      SVC INSTR ?
         BE    DEC                BRANCH IF YES
         L     R14,ABCV           CONVERT REGISTER TO
         ST    R13,RG+4           BCD
         CNOP  2,4
         BALR  R14,R14            call BCV csect
RG       DC    F'0'
         DC    F'0'               callers r13 reloaded from here
         L     R3,FMTPA           get @ o/p buffer
         USING OUTLINE,R3         tell assembler              CFK*FEB00
         CLI   FMTFMT,FMTFRR2     only 2nd reg needed ?       CFK*APR00
         BNE   NOTRR2             branch if not               CFK*APR00
         MVC   RG(2),RG+2         else move down registers    CFK*APR00
         CLC   FMTTEXT(2),=XL2'07F0'   hardware syncpoint ?   CFK*MAY00
         BNE   NOTRR2             branch if not               CFK*MAY00
         MVC   OUTOPER+14(13),=C'Serialize CPU'       flag it CFK*MAY00
NOTRR2   DS    0H                                             CFK*APR00
         MVC   OUTOPER(2),RG      copy register no (2 byte)
         CLI   RG,C'0'            reg 0-9 ?
         BNE   RRZ                if not leave 2 byte reg no.
         MVC   OUTOPER(1),RG+1    else copy 1 byte reg no.
         MVI   OUTOPER+1,C' '     put a space after it
         BCT   R3,RRZ             dec pointer to o/p buffer
RRZ      CLI   FMTFMT,FMTFRR1     only 1 reg. needed ?
         BNL   RET                if so finished
         MVI   OUTOPER+2,C','     NO - add comma
         MVC   OUTOPER+3(2),RG+2  add 2nd reg no.
         CLI   RG+2,C'0'          reg 0-9 ?
         BNE   RRZ2               if not leave 2 byte reg no.
         MVC   OUTOPER+3(1),RG+3  else copy 1 byte reg no.
         MVI   OUTOPER+4,C' '     and put a space after it.
RRZ2     DS    0H
         CLI   FMTTEXT,X'0D'      BASR inst ?                 CFK*MAY94
         BE    RRZ3               if so check USING           CFK*MAY94
         CLI   FMTTEXT,X'05'      BALR INST ?
         BNE   RET                if not exit
RRZ3     DS    0H                                             CFK*MAY94
         CLC   RG+2(2),ZER        balr x,0 ?
         BNE   RET                if not exit
         CLC   RG(2),ZER          balr 0,0 ?
         BE    RET                if so exit (reg 0 can't be a base)
         L     R3,PCR             get @ PAB in pass1
         MVC   OUTINSTR(8),US     set next card to USING *,
         MVI   0(R3),X'FF'        flag card inserted
         MVC   OUTOPER+2(2),RG    add reg to USING card
         MVC   CRR+4(4),FMTIC     pass IC to using
         MVC   CRR+2(1),FMTTEXT2  pass reg no.
         MVI   CRR,X'01'          flag insert
         DROP  R3                 tell assembler r3 changed   CFK*FEB00
         L     R3,CRR+4
         A     R3,F12             add 512 to IC passed to USING
         ST    R3,CRR+4
         L     R15,AUSI           ENTER IC IN USING TABLE     CFK*SEP03
         LA    R1,CRR             get @ USING parms           CFK*SEP03
         BASR  R14,R15            call USING csect            CFK*SEP03
         B     RET                and exit
*  USING parms are:
*    +0  hex flag, 00 - drop, 01 or 02 - insert, 03 - retrieve
*    +2  1 byte address part of instruction
*    +3  1 byte address part of instruction
*    +4  3 byte current loc (?) - if insert
*    +7  1 byte instruction format from AXN table
CRR      DC    F'0'               x'01' flag, xl1'0', 2x'r0' reg no.
         DC    F'0'               IC (instruction counter ?)
* format a SVC's parameters
DEC      L     R3,RG              output SVC no in decimal
         CVD   R3,RGD
         L     R3,FMTPA           get @ o/p buffer
         USING OUTLINE,R3         tell assembler              CFK*FEB00
         MVC   CWRK,=X'40202120'  prepare to EDit             CFK*APR99
         LA    R1,CWRK+3          prime r1                    CFK*APR99
         EDMK  CWRK,RGD+6         generate SVC number         CFK*APR99
         MVC   OUTOPER(3),0(R1)   move it to output buffer    CFK*APR99
         L     R14,RG             get SVC number              CFK*MAY94
         SLL   R14,3              mul by svc table entry length (8) Y94
         LA    R14,SVCTAB(R14)    @ SVC description           CFK*MAY94
         MVC   OUTOPER+14(8),0(R14)  copy SVC description     CFK*MAY94
RET      LEAVE ,                  return to caller            CFK*NOV03
         DC    C'IMM='
         LTORG
ABCV     DC    A(BCV)             @ BCV csect
AUSI     DC    A(USING)           @ USING csect
PCR      DC    A(PAB)             @ PAB in PASS1
INSTR    DC    C'  '
CWRK     DC    CL4' '             work area for EDMK          CFK*MAY94
         DC    CL2' '             continuation of work area   CFK*MAY94
RGD      DC    D'0'               space to convert SVC # to decimal
RR14     DC    F'0'               save area for r14
F12      DC    F'512'             constant
Z3       DC    F'0'               constant
ZER      DC    X'F0F0'
US       DC    C'USING *,'
SAVEAREA DS    18F                                            CFK*SEP03
         DS    0F
*   table of svc descriptions (all added in may 1999)
SVCTAB   DC    CL8'EXCP    '       00            0
         DC    CL8'WAIT    '       01            1
         DC    CL8'POST    '       02            2
         DC    CL8'EXIT    '       03            3
         DC    CL8'GETMAIN '       04            4
         DC    CL8'FREEMAIN'       05            5
         DC    CL8'LINK    '       06            6
         DC    CL8'XCTL    '       07            7
         DC    CL8'LOAD    '       08            8
         DC    CL8'DELETE  '       09            9
         DC    CL8'GMN/FRMN'       0A           10
         DC    CL8'TIME    '       0B           11
         DC    CL8'SYNCH   '       0C           12
         DC    CL8'ABEND   '       0D           13
         DC    CL8'SPIE    '       0E           14
         DC    CL8'ERREXCP '       0F           15
         DC    CL8'PURGE   '       10           16
         DC    CL8'RESTORE '       11           17
         DC    CL8'BLDL    '       12           18
         DC    CL8'OPEN    '       13           19
         DC    CL8'CLOSE   '       14           20
         DC    CL8'STOW    '       15           21
         DC    CL8'OPEN J  '       16           22
         DC    CL8'CLOSE T '       17           23
         DC    CL8'DEVTYPE '       18           24
         DC    CL8'TRKBAL  '       19           25
         DC    CL8'LOCATE  '       1A           26
         DC    CL8'OBTAIN  '       1B           27
         DC    CL8'CVOL   *'       1C           28  also CAIRIM
         DC    CL8'SCRATCH '       1D           29
         DC    CL8'RENAME  '       1E           30
         DC    CL8'FEOV    '       1F           31
         DC    CL8'ALLOC   '       20           32
         DC    CL8'IOHALT  '       21           33
         DC    CL8'QEDIT   '       22           34
         DC    CL8'WTO/WTOR'       23           35
         DC    CL8'WTL     '       24           36
         DC    CL8'SEGLD   '       25           37
         DC    CL8'RESERVED'       26           38
         DC    CL8'LABEL   '       27           39
         DC    CL8'EXTRACT '       28           40
         DC    CL8'IDENTIFY'       29           41
         DC    CL8'ATTACH  '       2A           42
         DC    CL8'CIRB    '       2B           43
         DC    CL8'CHAP    '       2C           44
         DC    CL8'OVLYBRCH'       2D           45
         DC    CL8'TTIMER  '       2E           46
         DC    CL8'STIMER  '       2F           47
         DC    CL8'DEQ     '       30           48
         DC    CL8'RESERVED'       31           49
         DC    CL8'RESERVED'       32           50
         DC    CL8'SNAP    '       33           51
         DC    CL8'RESTART '       34           52
         DC    CL8'RELEX   '       35           53
         DC    CL8'DISABLE '       36           54
         DC    CL8'EOV     '       37           55
         DC    CL8'ENQ/RSV '       38           56
         DC    CL8'FREEDBUF'       39           57
         DC    CL8'RELBUF  '       3A           58
         DC    CL8'OLTEP   '       3B           59
         DC    CL8'(E)STAE '       3C           60
         DC    CL8'IKJEGS6A'       3D           61
         DC    CL8'DETACH  '       3E           62
         DC    CL8'CHKPT   '       3F           63
         DC    CL8'RDJFCB  '       40           64
         DC    CL8'RESERVED'       41           65
         DC    CL8'BTAMTEST'       42           66
         DC    CL8'RESERVED'       43           67
         DC    CL8'SYNADAF '       44           68
         DC    CL8'BSP     '       45           69
         DC    CL8'GSERV   '       46           70
         DC    CL8'ASGNBFR '       47           71
         DC    CL8'CHATR   '       48           72
         DC    CL8'SPAR    '       49           73
         DC    CL8'DAR     '       4A           74
         DC    CL8'DQUEUE  '       4B           75
         DC    CL8'IFBSTAT '       4C           76
         DC    CL8'RESERVED'       4D           77
         DC    CL8'LSPACE  '       4E           78
         DC    CL8'STATUS  '       4F           79
         DC    CL8'RESERVED'       50           80
         DC    CL8'SETPRT  '       51           81
         DC    CL8'DASDR   '       52           82
         DC    CL8'SMFWTM  '       53           83
         DC    CL8'GRAPHICS'       54           84
         DC    CL8'DDRSWAP '       55           85
         DC    CL8'ATLAS   '       56           86
         DC    CL8'DOM     '       57           87
         DC    CL8'MOD88   '       58           88
         DC    CL8'RESERVED'       59           89
         DC    CL8'RESERVED'       5A           90
         DC    CL8'VOLSTAT '       5B           91
         DC    CL8'TCBEXCP '       5C           92
         DC    CL8'TGET/PUT'       5D           93
         DC    CL8'STCC    '       5E           94
         DC    CL8'SYSEVENT'       5F           95
         DC    CL8'STAX    '       60           96
         DC    CL8'TSO TEST'       61           97
         DC    CL8'PROTECT '       62           98
         DC    CL8'DYNALLOC'       63           99
         DC    CL8'IKJEFFIB'       64          100
         DC    CL8'QTIP    '       65          101
         DC    CL8'AQCTL   '       66          102
         DC    CL8'XLATE   '       67          103
         DC    CL8'TOPCTL  '       68          104
         DC    CL8'IMAGLIB '       69          105
         DC    CL8'RESERVED'       6A          106
         DC    CL8'MODESET '       6B          107
         DC    CL8'RESERVED'       6C          108
         DC    CL8'ESR TP 4'       6D          109
         DC    CL8'DSTATUS '       6E          110
         DC    CL8'SVCHAM  '       6F          111
         DC    CL8'PGRLSE  '       70          112
         DC    CL8'PGFX/FRE'       71          113
         DC    CL8'EXCPVR  '       72          114
         DC    CL8'RESERVED'       73          115
         DC    CL8'ESR TP 1'       74          116
         DC    CL8'DEBCHK  '       75          117
         DC    CL8'RESERVED'       76          118
         DC    CL8'TESTAUTH'       77          119
         DC    CL8'GMN/FRM '       78          120
         DC    CL8'VSAM    '       79          121
         DC    CL8'EVENTS  '       7A          122
         DC    CL8'PURGEDQ '       7B          123
         DC    CL8'TPIO    '       7C          124
         DC    CL8'EVENTS  '       7D          125
         DC    CL8'MSS INTF'       7E          126
         DC    CL8'RESERVED'       7F          127
         DC    CL8'RESERVED'       80          128
         DC    CL8'RESERVED'       81          129
         DC    CL8'RACHECK '       82          130
         DC    CL8'RACINIT '       83          131
         DC    CL8'RACLIST '       84          132
         DC    CL8'RACDEF  '       85          133
         DC    CL8'RESERVED'       86          134
         DC    CL8'RESERVED'       87          135
         DC    CL8'RESERVED'       88          136
         DC    CL8'ESR     '       89          137
         DC    CL8'PGSER   '       8A          138
         DC    CL8'CVAF Req'       8B          139
         DC    CL8'RESERVED'       8C          140
         DC    CL8'RESERVED'       8D          141
         DC    CL8'RESERVED'       8E          142
         DC    CL8'RESERVED'       8F          143
         DC    CL8'RESERVED'       90          144
         DC    CL8'RESERVED'       91          145
         DC    CL8'RESERVED'       92          146
         DC    CL8'RESERVED'       93          147
         DC    CL8'RESERVED'       94          148
         DC    CL8'RESERVED'       95          149
         DC    CL8'RESERVED'       96          150
         DC    CL8'RESERVED'       97          151
         DC    CL8'RESERVED'       98          152
         DC    CL8'RESERVED'       99          153
         DC    CL8'RESERVED'       9A          154
         DC    CL8'RESERVED'       9B          155
         DC    CL8'RESERVED'       9C          156
         DC    CL8'CA-UNIV*'       9D          157  CA !
         DC    CL8'RESERVED'       9E          158
         DC    CL8'CAS9SVC*'       9F          159  CA !
         DC    CL8'RESERVED'       A0          160
         DC    CL8'RESERVED'       A1          161
         DC    CL8'RESERVED'       A2          162
         DC    CL8'RESERVED'       A3          163
         DC    CL8'RESERVED'       A4          164
         DC    CL8'RESERVED'       A5          165
         DC    CL8'RESERVED'       A6          166
         DC    CL8'RESERVED'       A7          167
         DC    CL8'LVSSSVC*'       A8          168  CA !
         DC    CL8'RESERVED'       A9          169
         DC    CL8'RESERVED'       AA          170
         DC    CL8'RESERVED'       AB          171
         DC    CL8'RESERVED'       AC          172
         DC    CL8'RESERVED'       AD          173
         DC    CL8'RESERVED'       AE          174
         DC    CL8'RESERVED'       AF          175
         DC    CL8'RESERVED'       B0          176
         DC    CL8'RESERVED'       B1          177
         DC    CL8'RESERVED'       B2          178
         DC    CL8'RESERVED'       B3          179
         DC    CL8'RESERVED'       B4          180
         DC    CL8'RESERVED'       B5          181
         DC    CL8'RESERVED'       B6          182
         DC    CL8'RESERVED'       B7          183
         DC    CL8'RESERVED'       B8          184
         DC    CL8'RESERVED'       B9          185
         DC    CL8'RESERVED'       BA          186
         DC    CL8'RESERVED'       BB          187
         DC    CL8'RESERVED'       BC          188
         DC    CL8'RESERVED'       BD          189
         DC    CL8'RESERVED'       BE          190
         DC    CL8'RESERVED'       BF          191
         DC    CL8'RESERVED'       C0          192
         DC    CL8'RESERVED'       C1          193
         DC    CL8'RESERVED'       C2          194
         DC    CL8'RESERVED'       C3          195
         DC    CL8'RESERVED'       C4          196
         DC    CL8'RESERVED'       C5          197
         DC    CL8'RESERVED'       C6          198
         DC    CL8'CA     *'       C7          199  CA !
         DC    56CL8'User SVC'     User SVCs   200-255
         YREGS ,                   register equates       CFK*DEC00
         END
